class IllegalMoveException(Exception):
    pass

class Grid:
    def __init__(self):
        self.grid = [None for i in range(9)]
        self.current_player = 'Player 1'

    def __repr__(self):
        s = ''
        for i in range(len(self.grid)):
            item = ' ' if self.grid[i] == None else str(self.grid[i])
            if (i + 1) % 3 == 0:
                s = (s + '[' + item + ']' + '\n')

            else:
                s = s + ('[' + item + ']')
        return s

    def move(self, row, column):
        if self.current_player == 'Player 1':
            print("It is {}'s turn.".format(str(self.current_player)))
            if self.grid[3*(row-1) + column - 1] is not None or not 3*(row-1) + column - 1 in range(9):
                raise IllegalMoveException
            else:
                self.grid[3*(row-1) + column - 1] = 'X'
                self.current_player = 'Player 2'
        elif self.current_player == 'Player 2':
            print("It is {}'s turn.".format(str(self.current_player)))
            if self.grid[3*(row-1) + column - 1] is not None or not 3*(row-1) + column - 1 in range(9):
                raise IllegalMoveException
            else:
                self.grid[3*(row-1) + column - 1] = 'O'
                self.current_player = 'Player 2'
        print(self)

    def game_over(self):
        if self.grid[0] == self.grid[1] == self.grid[2] and self.grid[0]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[0] == 'X' else 'Player 2'))
            return True
        elif self.grid[3] == self.grid[4] == self.grid[5] and self.grid[3]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[3] == 'X' else 'Player 2'))
            return True
        elif self.grid[6] == self.grid[7] == self.grid[8] and self.grid[6]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[6] == 'X' else 'Player 2'))
            return True
        elif self.grid[0] == self.grid[3] == self.grid[6] and self.grid[0]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[0] == 'X' else 'Player 2'))
            return True
        elif self.grid[1] == self.grid[4] == self.grid[7] and self.grid[1]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[1] == 'X' else 'Player 2'))
            return True
        elif self.grid[2] == self.grid[5] == self.grid[8] and self.grid[2]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[2] == 'X' else 'Player 2'))
            return True
        elif self.grid[0] == self.grid[4] == self.grid[8] and self.grid[0]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[0] == 'X' else 'Player 2'))
            return True
        elif self.grid[2] == self.grid[4] == self.grid[6] and self.grid[2]:
            print("Game over. {} Wins.".format('Player 1' if self.grid[2] == 'X' else 'Player 2'))
            return True 
        elif not None in self.grid:
            print("Game over, it's a tie.")
            return True

def main(g):
    print(g)
    move = input("Enter your move.")
    try:
        move_type = (int(move[0]), int(move[2]))
        g.move(move_type[0], move_type[1])
        if g.game_over():
            g.grid = [None for i in range(9)]
            cont = input("Press any key to continue.")
        main(g)
    except Exception:
        print("That move is not legal.")
        main(g)

g = Grid()
main(g)

